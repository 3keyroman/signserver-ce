<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core">

    <ui:remove>
    <!--
    /*************************************************************************
    *                                                                       *
    *  SignServer: The OpenSource Automated Signing Server                  *
    *                                                                       *
    *  This software is free software; you can redistribute it and/or       *
    *  modify it under the terms of the GNU Lesser General Public           *
    *  License as published by the Free Software Foundation; either         *
    *  version 2.1 of the License, or any later version.                    *
    *                                                                       *
    *  See terms of license at gnu.org.                                     *
    *                                                                       *
    *************************************************************************/

    Version: $Id$
    -->
    </ui:remove>

    <f:metadata>
        <f:viewParam name="id" value="#{workerBean.id}"/>
        <f:viewParam name="id" value="#{workerAuthBean.id}"/>
        <f:viewParam name="certSN" value="#{workerAuthBean.certSN}"/>
        <f:viewParam name="issuerDN" value="#{workerAuthBean.issuerDN}"/>
    </f:metadata>

    <body>

        <ui:composition template="./template.xhtml">
            <ui:param name="activeMenu" value="workers"/>

            <ui:define name="title">
                Worker <h:outputText value="#{workerAuthBean.worker.name}"/> - Configuration - Edit authorization
            </ui:define>

            <ui:define name="top">
                
            </ui:define>

            <ui:define name="content">
                <ui:include src="/worker-menu.xhtml">
                    <ui:param name="worker" value="#{workerAuthBean.worker}"/>
                    <ui:param name="workerActiveMenu" value="worker-authorization"/>
                </ui:include>
                
                <div id="worker_content">
                    <h2>Editing client with certificate serial number <h:outputText value="#{workerAuthBean.oldCertSN}"/> issued by <h:outputText value="#{workerAuthBean.oldIssuerDN}"/></h2>

                    <h:form id="form">
                        <h:inputHidden id="id" value="#{workerAuthBean.id}"/>
                        <h:inputHidden id="oldCertSN" value="#{workerAuthBean.oldCertSN}"/>
                        <h:inputHidden id="oldIssuerDN" value="#{workerAuthBean.oldIssuerDN}"/>

                        <h:panelGroup id="main" rendered="#{!workerAuthBean.fromCertificate}">

                            <h:panelGrid columns="4">
                                <h:outputLabel for="certSN">Certificate serial number:</h:outputLabel>
                                <h:inputText id="certSN" value="#{workerAuthBean.certSN}" size="16" requiredMessage="*">
                                    <f:validator validatorId="optionallyRequiredValidator"/>
                                    <f:attribute name="requiredIfSubmittedWith" value="#{components.buttonSubmit.clientId}"/>
                                </h:inputText>
                                <h:message for="certSN" class="errorMessage"/>
                                <h:commandButton class="buttonNeutral" value="..." action="#{workerAuthBean.browseAction()}"/>

                                <h:outputLabel for="issuerDN">Issuer DN:</h:outputLabel>
                                <h:inputText id="issuerDN" value="#{workerAuthBean.issuerDN}" size="40" requiredMessage="*">
                                    <f:validator validatorId="optionallyRequiredValidator"/>
                                    <f:attribute name="requiredIfSubmittedWith" value="#{components.buttonSubmit.clientId}"/>
                                </h:inputText>
                                <h:message for="issuerDN" class="errorMessage"/>
                                <h:commandButton class="buttonNeutral" value="Load current" action="#{workerAuthBean.loadCurrentAction()}"/>
                            </h:panelGrid>
                            <h:commandButton class="buttonFeatured" value="Submit" action="#{workerAuthBean.editAction()}" binding="#{components.buttonSubmit}"/>
                            <h:link value="Cancel" outcome="worker-authorization"><f:param name="id" value="#{workerAuthBean.worker.id}"/></h:link>
                        </h:panelGroup>

                        <h:panelGroup id="fromCert"  rendered="#{workerAuthBean.fromCertificate}">
                            <ui:remove>
                                <!-- Pure JavaScript file upload, since non-JS fallback of pasting upload exists -->
                            </ui:remove>
                            <h:outputLabel for="cert">Load from certificate file:</h:outputLabel><br/>
                            <h:inputTextarea id="cert" value="#{workerAuthBean.cert}" cols="50" rows="10"/> 
                            <p id="certFileInputContainer" class="fileInputContainer"></p>
                            <script>
                                ejbca.ra.createFileUploadInput("certNewFileInput", "certFileInputContainer", function(uploadedText) {
                                    document.getElementById("form:cert").value = uploadedText;
                                    //document.getElementById("keyPairForm:uploadCsrButton").click();
                                });
                            </script>
                            <br/>

                            <p>
                                <h:outputText value="#{workerAuthBean.loadErrorMessage}" class="errorMessage"/>
                            </p>
                            
                            <h:commandButton class="buttonFeatured" value="Load" action="#{workerAuthBean.loadAction()}"/> <h:commandButton class="buttonNeutral" value="Cancel" action="#{workerAuthBean.cancelBrowseAction()}"/>
                        </h:panelGroup>

                    </h:form>
                </div>

            </ui:define>

            <ui:define name="bottom">
            </ui:define>

        </ui:composition>

    </body>
</html>
